_OKCP.browseMatches = function() {
  /* eslint-disable */
  /* GENERATED BY DECAFFEINATE */
  
  // window.exec = function(func) {
  //     var container = document.querySelector('body') 
  //         || document.querySelector('html') 
  //         || document.documentElement;
  // 
  //     if (!container) {
  //         throw new Error('Failed to execute script because there seems to be no body, html or document at all')
  //     }
  // 
  //     var script = document.createElement('script');
  //     var stg = func.toString();
  //     console.log('stg');
  //     // stg = stg.replace('\n', '');
  //     script.innerText = '(' + func.toString() + ')();';
  //     container.appendChild(script);
  // }
  // 
  // function getWindow(){
  //   console.log('lof retreiving window', window);
  //   return window
  // }
  // var a = window.exec(getWindow);
  function verifyTokenPresence() {
    window.CURRENTUSERID = "49246541853129158";
    const settings = localStorage.okcpSettings;
    const tokenIsOld = Date.now() - settings.tokenLastUpdated > 60 * 60 * 2.75 * 1000;
    window.ACCESS_TOKEN = settings.ACCESS_TOKEN;
    if(tokenIsOld || !window.ACCESS_TOKEN) {
      window.OkC.getNewAccessToken().then(tokenres => 
        settings.ACCESS_TOKEN = tokenres.authcode);
    }
    
  }
  
  
  let numBtns = $("button[name='like']").length;
  
  setPasses();
  setInterval(()=>{
    const newNum = $("button[name='like']").length
    if (numBtns < newNum) setPasses();
    numBtns = newNum;
  }, 1000);
  
  function getLikePassParams(userId, likeBool) {
    return {
      api: 1,
      type: "POST",
      data: {
        source: "PROFILE",
        votes: [{
          userid: userId,
          like: likeBool,
          time_from_request: 0
        }]
      }
    }
    
  }
  
  function setLike($btn, val){
    const userId = $btn.closest("div[data-userid]").attr("data-userid");
    const params = getLikePassParams(userId, val);
    const path = "/likes/batch";
    window.OkC.api(path, params).then(res => {
      $btn.closest('.match_card_wrapper').css('display', 'none');
    }).catch(err => console.log(err));
  }
  
  
  function setPasses() {
    $("button[name='like']").each(function() {
      if((this.nextSibling || {}).name == "pass") return;
      let $likeBtn = $(this).clone();
      $likeBtn.css({marginLeft: 'inherit', position: 'relative', top: '10px', left: '10px'})
      let $passBtn = $likeBtn.clone();
      $passBtn.removeClass("liked");
      $passBtn.attr('name', 'pass');
      $passBtn.find("span").text("Pass");
      $passBtn.click(()=>setLike($passBtn, false));
      $likeBtn.click(()=>setLike($likeBtn, true));
      let $btnRow = $('<div></div>');
      $btnRow.append([$likeBtn, $passBtn]);
      $(this).replaceWith($btnRow);
    })
  }
  
  setTimeout(()=>console.log('reg window', window), 3000)
  
  return true;
};